name: Scan Code for Secrets
'on':
  push:
    branches:
      - '**'
    tags:
      - '!**'
jobs:
  detect-secrets:
    name: check-for-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - uses: BSFishy/pip-action@v1
        with:
          packages: detect-secrets
      - id: detect_secrets_path
        name: Get the location of the detect-secrets package
        run: |
          _PATH=$(pip show detect-secrets | grep Location | cut -d' ' -f2)
          echo "::set-output name=value::$_PATH/detect_secrets"
      - name: Add the email detection plugin
        run: >
          echo -e "

          import re

          from detect_secrets.plugins.base import RegexBasedDetector

          class EmailAddressDetector(RegexBasedDetector):
            secret_type = 'Email'
            denylist = [
              re.compile(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z.]{2,}')
            ]
          " > ${{ steps.detect_secrets_path.outputs.value
          }}/plugins/email_address.py
      - name: Run Yelp's detect-secrets (scan)
        run: |-
          detect-secrets scan \
           --exclude-files ".github/workflows/detect-secrets.yml" \
           --exclude-lines "@codecademy.com" --exclude-lines "NPM_TOKEN" \
           --exclude-lines "secretName:" \
           --exclude-secrets "abc123xyz456" \
           --exclude-secrets "git@github.com" \
           --exclude-secrets "eks-codecademy-com-prod-api-tls" > ./.secrets.baseline
      - name: Run Yelp's detect-secrets (audit)
        run: detect-secrets audit ./.secrets.baseline
      - name: Audit Report
        if: failure()
        run: detect-secrets audit --report ./.secrets.baseline
